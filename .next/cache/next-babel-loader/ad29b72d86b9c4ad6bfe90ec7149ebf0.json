{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/julio/relogiodigital/pages/index.js\",\n    _s = $RefreshSig$();\n\n//import { render } from 'node-sass';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport styles from '../styles/index.module.scss';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab'; //import AddIcon from '@material-ui/icons/Add';\n//import NavigationIcon from '@material-ui/icons/Navigation';\n\nexport default function home(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(new Date()),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(''),\n      hour = _useState2[0],\n      setHour = _useState2[1];\n\n  var _useState3 = useState(''),\n      minute = _useState3[0],\n      setMinute = _useState3[1];\n\n  var second = 1;\n\n  var _useState4 = useState([]),\n      events = _useState4[0],\n      setEvents = _useState4[1];\n\n  var _useState5 = useState(0),\n      contador = _useState5[0],\n      setContador = _useState5[1]; //Replaces componentDidMount and componentWillUnmount\n\n\n  useEffect(function () {\n    var timerID = setInterval(function () {\n      return tick();\n    }, 1000);\n    var timer2 = setInterval(function () {\n      return check();\n    }, 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  function check() {\n    if (hour == date.getHours() && minute == date.getMinutes() && second == date.getSeconds()) {\n      alert('hello');\n    }\n  }\n\n  var agendarHorario = function agendarHorario() {\n    events.push({\n      name: \"evento \".concat(contador),\n      hora: hour,\n      minuto: minute\n    });\n    setContador(contador + 1);\n    console.log(events);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      className: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: date.toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Your time is: \", hour, \":\", minute]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: function onChange(event) {\n              return setHour(event.target.value);\n            },\n            id: \"outlined-basic\",\n            label: \"Hora\",\n            variant: \"outlined\",\n            className: styles.timeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: styles.divisor,\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            onChange: function onChange(event) {\n              return setMinute(event.target.value);\n            },\n            id: \"outlined-basic\",\n            label: \"Minutos\",\n            variant: \"outlined\",\n            className: styles.timeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: agendarHorario,\n            children: \"aaaaaa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: events.map(function (x) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(home, \"2xxfHKB/+tt7cwqrl0zZ6vEp+FU=\");","map":{"version":3,"sources":["/home/julio/relogiodigital/pages/index.js"],"names":["React","useState","useEffect","Container","styles","TextField","Fab","home","props","Date","date","setDate","hour","setHour","minute","setMinute","second","events","setEvents","contador","setContador","timerID","setInterval","tick","timer2","check","cleanup","clearInterval","getHours","getMinutes","getSeconds","alert","agendarHorario","push","name","hora","minuto","console","log","body","form","toLocaleTimeString","event","target","value","timeInput","divisor","map","x"],"mappings":"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","sourcesContent":["//import { render } from 'node-sass';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport styles from '../styles/index.module.scss'\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\n//import AddIcon from '@material-ui/icons/Add';\n//import NavigationIcon from '@material-ui/icons/Navigation';\n\n\nexport default function home(props) {\n  const [date, setDate] = useState(new Date());\n  const [hour, setHour] = useState('')\n  const [minute, setMinute] = useState('')\n  const second = 1;\n  var [events, setEvents] = useState([])\n  var [contador, setContador] = useState(0)\n //Replaces componentDidMount and componentWillUnmount\n  useEffect(() => {\n    var timerID = setInterval( () => tick(), 1000 );\n    var timer2 = setInterval( () => check(), 1000 ); \n\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n      };\n });\n\n  function tick() {\n    setDate(new Date());\n   }\n\n\n  function check(){\n    if (hour == date.getHours() && minute == date.getMinutes()\n       && second == date.getSeconds()){\n        alert('hello');\n       \n      }\n   }\n\n  const agendarHorario = () => {\n\n    events.push({\n      name: `evento ${contador}`,\n      hora: hour,\n      minuto: minute\n    })\n    setContador(contador+1)\n    console.log(events)\n    \n    }\n\n\n  return (\n    <React.Fragment>\n    <body className={styles.body}>\n     <div className={styles.form}>\n        <Container maxWidth=\"sm\">\n        <h1>{date.toLocaleTimeString()}</h1>\n        <h1>Your time is: {hour}:{minute}</h1>\n        <TextField onChange={event => setHour(event.target.value)}\n        id=\"outlined-basic\" label=\"Hora\" variant=\"outlined\" \n        className={styles.timeInput} />\n        <a className = {styles.divisor}>:</a>\n\n        <TextField onChange={event => setMinute(event.target.value)} \n        id=\"outlined-basic\" label=\"Minutos\" variant=\"outlined\" \n        className={styles.timeInput}/>\n        <br /><br /> <br />\n\n        <button onClick={agendarHorario}>aaaaaa</button>\n        </Container>\n        \n        <div>\n          {events.map(x => (\n            <li>{x.name}</li>\n          ))}\n        </div>\n      </div>\n      </body>\n      </React.Fragment>\n    );\n}"]},"metadata":{},"sourceType":"module"}