{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/julio/relogiodigital/pages/index.js\";\n//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport styles from '../styles/index.module.scss';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nexport default function home(props) {\n  const {\n    0: date,\n    1: setDate\n  } = useState(new Date());\n  const {\n    0: hour,\n    1: setHour\n  } = useState('');\n  const {\n    0: minute,\n    1: setMinute\n  } = useState('');\n  const second = 1;\n  var {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  var {\n    0: contador,\n    1: setContador\n  } = useState(0); //Replaces componentDidMount and componentWillUnmount\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    var timer2 = setInterval(() => check(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  function check() {\n    if (hour == date.getHours() && minute == date.getMinutes() && second == date.getSeconds()) {\n      alert('hello');\n    }\n  }\n\n  const agendarHorario = () => {\n    events.push({\n      name: `evento ${contador}`,\n      hora: hour,\n      minuto: minute\n    });\n    setContador(contador + 1);\n    console.log(events);\n  };\n\n  const myArrCreatedFromMap = events.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item.name\n  }, item + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 58\n  }, this));\n\n  const myList = () => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myArrCreatedFromMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 14\n    }, this); // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n  };\n\n  function list() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: events.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: x.name\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: styles.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: date.toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Your time is: \", hour, \":\", minute]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setHour(event.target.value),\n          id: \"outlined-basic\",\n          label: \"Hora\",\n          variant: \"outlined\",\n          className: styles.timeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: styles.divisor,\n          children: \":\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setMinute(event.target.value),\n          id: \"outlined-basic\",\n          label: \"Minutos\",\n          variant: \"outlined\",\n          className: styles.timeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: agendarHorario,\n          children: \"aaaaaa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: events.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: x.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 6\n  }, this);\n}","map":{"version":3,"sources":["/home/julio/relogiodigital/pages/index.js"],"names":["useState","useEffect","Container","styles","TextField","Fab","AddIcon","NavigationIcon","home","props","date","setDate","Date","hour","setHour","minute","setMinute","second","events","setEvents","contador","setContador","timerID","setInterval","tick","timer2","check","cleanup","clearInterval","getHours","getMinutes","getSeconds","alert","agendarHorario","push","name","hora","minuto","console","log","myArrCreatedFromMap","map","item","i","myList","list","x","body","form","toLocaleTimeString","event","target","value","timeInput","divisor"],"mappings":"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","sourcesContent":["//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport styles from '../styles/index.module.scss'\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\n\nexport default function home(props) {\n  const [date, setDate] = useState(new Date());\n  const [hour, setHour] = useState('')\n  const [minute, setMinute] = useState('')\n  const second = 1;\n  var [events, setEvents] = useState([])\n  var [contador, setContador] = useState(0)\n //Replaces componentDidMount and componentWillUnmount\n useEffect(() => {\n  var timerID = setInterval( () => tick(), 1000 );\n  var timer2 = setInterval( () => check(), 1000 ); \n\n  return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n });\n\n   function tick() {\n    setDate(new Date());\n   }\n\n\n   function check(){\n     if (hour == date.getHours() && minute == date.getMinutes()\n     && second == date.getSeconds()){\n       alert('hello');\n       \n     }\n   }\n\n  const agendarHorario = () => {\n\n    events.push({\n      name: `evento ${contador}`,\n      hora: hour,\n      minuto: minute\n    })\n    setContador(contador+1)\n    console.log(events)\n    \n    }\n    const myArrCreatedFromMap = events.map((item, i) => (<li key={item + i}>{item.name}</li>));\n    const myList =() => {\n      return(<ul>{myArrCreatedFromMap}</ul>) // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n    }\n\n\n    function list(){\n      \n      return(\n        <div>\n          {events.map(x => (\n            <li key={x.name}>{x.name}</li>\n          ))}\n        </div>\n      )\n    }\n\n   return (\n     <body className={styles.body}>\n      <div className={styles.form}>\n        <Container maxWidth=\"sm\">\n        <h1>{date.toLocaleTimeString()}</h1>\n        <h1>Your time is: {hour}:{minute}</h1>\n        <TextField onChange={event => setHour(event.target.value)}\n         id=\"outlined-basic\" label=\"Hora\" variant=\"outlined\" \n         className={styles.timeInput} />\n         <a className = {styles.divisor}>:</a>\n\n        <TextField onChange={event => setMinute(event.target.value)} \n        id=\"outlined-basic\" label=\"Minutos\" variant=\"outlined\" \n        className={styles.timeInput}/>\n        <br /><br /> <br />\n\n        <button onClick={agendarHorario}>aaaaaa</button>\n        </Container>\n        \n        <div>\n          {events.map(x => (\n            <li>{x.name}</li>\n          ))}\n        </div>\n      </div>\n      </body>\n    );\n}"]},"metadata":{},"sourceType":"module"}