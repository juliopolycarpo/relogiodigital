{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/julio/relogiodigital/pages/index.js\";\n//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport styles from '../styles/index.module.scss';\nimport TextField from '@material-ui/core/TextField';\nexport default function home(props) {\n  const {\n    0: date,\n    1: setDate\n  } = useState(new Date());\n  const {\n    0: hour,\n    1: setHour\n  } = useState('');\n  const {\n    0: minute,\n    1: setMinute\n  } = useState('');\n  const second = 1;\n  var {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  var {\n    0: contador,\n    1: setContador\n  } = useState(0); //Replaces componentDidMount and componentWillUnmount\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    var timer2 = setInterval(() => check(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  function check() {\n    if (hour == date.getHours() && minute == date.getMinutes() && second == date.getSeconds()) {\n      alert('hello');\n    }\n  }\n\n  const agendarHorario = () => {\n    events.push({\n      name: `evento ${contador}`,\n      hora: hour,\n      minuto: minute\n    });\n    setContador(contador + 1);\n    console.log(events);\n  };\n\n  const myArrCreatedFromMap = events.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item.name\n  }, item + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 58\n  }, this));\n\n  const myList = () => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myArrCreatedFromMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this); // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n  };\n\n  function list() {\n    e = events;\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: e.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: x.name\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: styles.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [date.toLocaleTimeString(), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Your time is: \", hour, \":\", minute]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setHour(event.target.value),\n          id: \"outlined-basic\",\n          label: \"Hora\",\n          variant: \"outlined\",\n          className: styles.timeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: event => setMinute(event.target.value),\n          id: \"outlined-basic\",\n          label: \"Minutos\",\n          variant: \"outlined\",\n          className: styles.timeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: agendarHorario,\n          children: \"aaaaaa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: events.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: x.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 6\n  }, this);\n}","map":{"version":3,"sources":["/home/julio/relogiodigital/pages/index.js"],"names":["useState","useEffect","Container","styles","TextField","home","props","date","setDate","Date","hour","setHour","minute","setMinute","second","events","setEvents","contador","setContador","timerID","setInterval","tick","timer2","check","cleanup","clearInterval","getHours","getMinutes","getSeconds","alert","agendarHorario","push","name","hora","minuto","console","log","myArrCreatedFromMap","map","item","i","myList","list","e","x","body","form","toLocaleTimeString","event","target","value","timeInput"],"mappings":";;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAhC;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACY,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMc,MAAM,GAAG,CAAf;AACA,MAAI;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAA0BlB,QAAQ,CAAC,CAAD,CAAtC,CANkC,CAOnC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkB,OAAO,GAAGC,WAAW,CAAE,MAAMC,IAAI,EAAZ,EAAgB,IAAhB,CAAzB;AACA,QAAIC,MAAM,GAAGF,WAAW,CAAE,MAAMG,KAAK,EAAb,EAAiB,IAAjB,CAAxB;AAEA,WAAO,SAASC,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACN,OAAD,CAAb;AACAM,MAAAA,aAAa,CAACH,MAAD,CAAb;AACD,KAHH;AAIA,GARQ,CAAT;;AAUE,WAASD,IAAT,GAAgB;AACfb,IAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACA;;AAGD,WAASc,KAAT,GAAgB;AACd,QAAIb,IAAI,IAAIH,IAAI,CAACmB,QAAL,EAAR,IAA2Bd,MAAM,IAAIL,IAAI,CAACoB,UAAL,EAArC,IACDb,MAAM,IAAIP,IAAI,CAACqB,UAAL,EADb,EAC+B;AAC7BC,MAAAA,KAAK,CAAC,OAAD,CAAL;AAED;AACF;;AAEF,QAAMC,cAAc,GAAG,MAAM;AAE3Bf,IAAAA,MAAM,CAACgB,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAG,UAASf,QAAS,EADf;AAEVgB,MAAAA,IAAI,EAAEvB,IAFI;AAGVwB,MAAAA,MAAM,EAAEtB;AAHE,KAAZ;AAKAM,IAAAA,WAAW,CAACD,QAAQ,GAAC,CAAV,CAAX;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAZ;AAEC,GAVH;;AAWE,QAAMsB,mBAAmB,GAAGtB,MAAM,CAACuB,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBAAc;AAAA,cAAoBD,IAAI,CAACP;AAAzB,KAASO,IAAI,GAAGC,CAAhB;AAAA;AAAA;AAAA;AAAA,UAAzB,CAA5B;;AACA,QAAMC,MAAM,GAAE,MAAM;AAClB,wBAAO;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP,CADkB,CACqB;AACxC,GAFD;;AAKA,WAASK,IAAT,GAAe;AACbC,IAAAA,CAAC,GAAG5B,MAAJ;AACA,wBACE;AAAA,gBACG4B,CAAC,CAACL,GAAF,CAAMM,CAAC,iBACN;AAAA,kBAAkBA,CAAC,CAACZ;AAApB,SAASY,CAAC,CAACZ,IAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEF,sBACE;AAAM,IAAA,SAAS,EAAE7B,MAAM,CAAC0C,IAAxB;AAAA,2BACC;AAAK,MAAA,SAAS,EAAE1C,MAAM,CAAC2C,IAAvB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,IAApB;AAAA,gCACA;AAAA,qBAAKvC,IAAI,CAACwC,kBAAL,EAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA,uCAAmBrC,IAAnB,OAA0BE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEoC,KAAK,IAAIrC,OAAO,CAACqC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArC;AACC,UAAA,EAAE,EAAC,gBADJ;AACqB,UAAA,KAAK,EAAC,MAD3B;AACkC,UAAA,OAAO,EAAC,UAD1C;AAEC,UAAA,SAAS,EAAE/C,MAAM,CAACgD;AAFnB;AAAA;AAAA;AAAA;AAAA,gBAHA,eAOA,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEH,KAAK,IAAInC,SAAS,CAACmC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvC;AACA,UAAA,EAAE,EAAC,gBADH;AACoB,UAAA,KAAK,EAAC,SAD1B;AACoC,UAAA,OAAO,EAAC,UAD5C;AAEA,UAAA,SAAS,EAAE/C,MAAM,CAACgD;AAFlB;AAAA;AAAA;AAAA;AAAA,gBAPA,eAUA;AAAA;AAAA;AAAA;AAAA,gBAVA,eAUM;AAAA;AAAA;AAAA;AAAA,gBAVN,oBAUa;AAAA;AAAA;AAAA;AAAA,gBAVb,eAYA;AAAQ,UAAA,OAAO,EAAErB,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAA,kBACGf,MAAM,CAACuB,GAAP,CAAWM,CAAC,iBACX;AAAA,oBAAKA,CAAC,CAACZ;AAAP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AA0BF","sourcesContent":["//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\nimport styles from '../styles/index.module.scss'\nimport TextField from '@material-ui/core/TextField';\n\nexport default function home(props) {\n  const [date, setDate] = useState(new Date());\n  const [hour, setHour] = useState('')\n  const [minute, setMinute] = useState('')\n  const second = 1;\n  var [events, setEvents] = useState([])\n  var [contador, setContador] = useState(0)\n //Replaces componentDidMount and componentWillUnmount\n useEffect(() => {\n  var timerID = setInterval( () => tick(), 1000 );\n  var timer2 = setInterval( () => check(), 1000 ); \n\n  return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n });\n\n   function tick() {\n    setDate(new Date());\n   }\n\n\n   function check(){\n     if (hour == date.getHours() && minute == date.getMinutes()\n     && second == date.getSeconds()){\n       alert('hello');\n       \n     }\n   }\n\n  const agendarHorario = () => {\n\n    events.push({\n      name: `evento ${contador}`,\n      hora: hour,\n      minuto: minute\n    })\n    setContador(contador+1)\n    console.log(events)\n    \n    }\n    const myArrCreatedFromMap = events.map((item, i) => (<li key={item + i}>{item.name}</li>));\n    const myList =() => {\n      return(<ul>{myArrCreatedFromMap}</ul>) // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n    }\n\n\n    function list(){\n      e = events\n      return(\n        <ol>\n          {e.map(x => (\n            <li key={x.name}>{x.name}</li>\n          ))}\n        </ol>\n      )\n    }\n\n   return (\n     <body className={styles.body}>\n      <div className={styles.form}>\n        <Container maxWidth=\"sm\">\n        <h2>{date.toLocaleTimeString()}.</h2>\n        <h1>Your time is: {hour}:{minute}</h1>\n        <TextField onChange={event => setHour(event.target.value)}\n         id=\"outlined-basic\" label=\"Hora\" variant=\"outlined\" \n         className={styles.timeInput} />\n\n        <TextField onChange={event => setMinute(event.target.value)} \n        id=\"outlined-basic\" label=\"Minutos\" variant=\"outlined\" \n        className={styles.timeInput}/>\n        <br /><br /> <br />\n\n        <button onClick={agendarHorario}>aaaaaa</button>\n        </Container>\n        \n        <div>\n          {events.map(x => (\n            <li>{x.name}</li>\n          ))}\n        </div>\n      </div>\n      </body>\n    );\n}"]},"metadata":{},"sourceType":"module"}