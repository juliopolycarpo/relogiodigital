{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/julio/relogiodigital/pages/index.js\";\n//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react'; //import styles from '../styles/index.module.scss'\n\nexport default function home(props) {\n  const {\n    0: date,\n    1: setDate\n  } = useState(new Date());\n  const {\n    0: hour,\n    1: setHour\n  } = useState('');\n  const {\n    0: minute,\n    1: setMinute\n  } = useState('');\n  const second = 1;\n  var {\n    0: events,\n    1: setEvents\n  } = useState([]);\n  var {\n    0: contador,\n    1: setContador\n  } = useState(0); //Replaces componentDidMount and componentWillUnmount\n\n  useEffect(() => {\n    var timerID = setInterval(() => tick(), 1000);\n    var timer2 = setInterval(() => check(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  function check() {\n    if (hour == date.getHours() && minute == date.getMinutes() && second == date.getSeconds()) {\n      alert('hello');\n    }\n  }\n\n  const agendarHorario = (hours, minutes) => {\n    var evento = {\n      name: `evento ${contador}`,\n      hora: hours,\n      minuto: minutes\n    };\n    var newEvents = events.push(evento);\n    setEvents = newEvents;\n    contador = contador + 1;\n    console.log(events);\n  };\n\n  const myArrCreatedFromMap = events.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item.name\n  }, item + i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 58\n  }, this));\n\n  const myList = () => {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myArrCreatedFromMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this); // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n  };\n\n  function list() {\n    e = events;\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: e.map(x => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: x.name\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It is \", date.toLocaleTimeString(), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your time is: \", hour, \":\", minute]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"list\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => setHour(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: event => setMinute(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: agendarHorario(hour, minute),\n      children: \"aaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/home/julio/relogiodigital/pages/index.js"],"names":["useState","useEffect","home","props","date","setDate","Date","hour","setHour","minute","setMinute","second","events","setEvents","contador","setContador","timerID","setInterval","tick","timer2","check","cleanup","clearInterval","getHours","getMinutes","getSeconds","alert","agendarHorario","hours","minutes","evento","name","hora","minuto","newEvents","push","console","log","myArrCreatedFromMap","map","item","i","myList","list","e","x","toLocaleTimeString","event","target","value"],"mappings":";;AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CACA;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,IAAIM,IAAJ,EAAD,CAAhC;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACS,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,MAAM,GAAG,CAAf;AACA,MAAI;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI;AAAA,OAACc,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAAC,CAAD,CAAtC,CANkC,CAOnC;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIe,OAAO,GAAGC,WAAW,CAAE,MAAMC,IAAI,EAAZ,EAAgB,IAAhB,CAAzB;AACA,QAAIC,MAAM,GAAGF,WAAW,CAAE,MAAMG,KAAK,EAAb,EAAiB,IAAjB,CAAxB;AAEA,WAAO,SAASC,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACN,OAAD,CAAb;AACAM,MAAAA,aAAa,CAACH,MAAD,CAAb;AACD,KAHH;AAIA,GARQ,CAAT;;AAUE,WAASD,IAAT,GAAgB;AACfb,IAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACA;;AAGD,WAASc,KAAT,GAAgB;AACd,QAAIb,IAAI,IAAIH,IAAI,CAACmB,QAAL,EAAR,IAA2Bd,MAAM,IAAIL,IAAI,CAACoB,UAAL,EAArC,IACDb,MAAM,IAAIP,IAAI,CAACqB,UAAL,EADb,EAC+B;AAC7BC,MAAAA,KAAK,CAAC,OAAD,CAAL;AAED;AACF;;AAED,QAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC1C,QAAIC,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAG,UAASjB,QAAS,EADZ;AAEbkB,MAAAA,IAAI,EAAGJ,KAFM;AAGbK,MAAAA,MAAM,EAAGJ;AAHI,KAAb;AAIA,QAAIK,SAAS,GAAGtB,MAAM,CAACuB,IAAP,CAAYL,MAAZ,CAAhB;AACAjB,IAAAA,SAAS,GAAGqB,SAAZ;AACApB,IAAAA,QAAQ,GAAGA,QAAQ,GAAE,CAArB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYzB,MAAZ;AAEC,GAVF;;AAYC,QAAM0B,mBAAmB,GAAG1B,MAAM,CAAC2B,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,kBAAc;AAAA,cAAoBD,IAAI,CAACT;AAAzB,KAASS,IAAI,GAAGC,CAAhB;AAAA;AAAA;AAAA;AAAA,UAAzB,CAA5B;;AACA,QAAMC,MAAM,GAAE,MAAM;AAClB,wBAAO;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP,CADkB,CACqB;AACxC,GAFD;;AAKA,WAASK,IAAT,GAAe;AACbC,IAAAA,CAAC,GAAGhC,MAAJ;AACA,wBACE;AAAA,gBACGgC,CAAC,CAACL,GAAF,CAAMM,CAAC,iBACN;AAAA,kBAAkBA,CAAC,CAACd;AAApB,SAASc,CAAC,CAACd,IAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEF,sBACG;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2BAAW3B,IAAI,CAAC0C,kBAAL,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,mCAAmBvC,IAAnB,OAA0BE,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAOE;AAAO,MAAA,QAAQ,EAAEsC,KAAK,IAAIvC,OAAO,CAACuC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAjC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAO,MAAA,QAAQ,EAAEF,KAAK,IAAIrC,SAAS,CAACqC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAnC;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAQ,MAAA,OAAO,EAAEtB,cAAc,CAACpB,IAAD,EAAOE,MAAP,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAaF","sourcesContent":["//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react';\n//import styles from '../styles/index.module.scss'\n\nexport default function home(props) {\n  const [date, setDate] = useState(new Date());\n  const [hour, setHour] = useState('')\n  const [minute, setMinute] = useState('')\n  const second = 1;\n  var [events, setEvents] = useState([])\n  var [contador, setContador] = useState(0)\n //Replaces componentDidMount and componentWillUnmount\n useEffect(() => {\n  var timerID = setInterval( () => tick(), 1000 );\n  var timer2 = setInterval( () => check(), 1000 ); \n\n  return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n });\n\n   function tick() {\n    setDate(new Date());\n   }\n\n\n   function check(){\n     if (hour == date.getHours() && minute == date.getMinutes()\n     && second == date.getSeconds()){\n       alert('hello');\n       \n     }\n   }\n\n   const agendarHorario = (hours, minutes) => {\n    var evento = {\n    name: `evento ${contador}`,\n    hora : hours,\n    minuto : minutes};\n    var newEvents = events.push(evento);\n    setEvents = newEvents;\n    contador = contador +1\n    console.log(events)\n    \n    }\n\n    const myArrCreatedFromMap = events.map((item, i) => (<li key={item + i}>{item.name}</li>));\n    const myList =() => {\n      return(<ul>{myArrCreatedFromMap}</ul>) // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n    }\n\n\n    function list(){\n      e = events\n      return(\n        <ol>\n          {e.map(x => (\n            <li key={x.name}>{x.name}</li>\n          ))}\n        </ol>\n      )\n    }\n\n   return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {date.toLocaleTimeString()}.</h2>\n        <h1>Your time is: {hour}:{minute}</h1>\n\n        <list />\n        \n        <input onChange={event => setHour(event.target.value)} />\n        <input onChange={event => setMinute(event.target.value)} />\n        <button onClick={agendarHorario(hour, minute)}>aaaaaa</button>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}