{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/julio/relogiodigital/pages/index.js\",\n    _s = $RefreshSig$();\n\n//import { render } from 'node-sass';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/index.module.scss';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab'; //import AddIcon from '@material-ui/icons/Add';\n//import NavigationIcon from '@material-ui/icons/Navigation';\n\nexport default function home(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(new Date()),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(''),\n      hour = _useState2[0],\n      setHour = _useState2[1];\n\n  var _useState3 = useState(''),\n      minute = _useState3[0],\n      setMinute = _useState3[1];\n\n  var second = 1;\n\n  var _useState4 = useState([]),\n      events = _useState4[0],\n      setEvents = _useState4[1];\n\n  var _useState5 = useState(0),\n      contador = _useState5[0],\n      setContador = _useState5[1]; //Replaces componentDidMount and componentWillUnmount\n\n\n  useEffect(function () {\n    var timerID = setInterval(function () {\n      return tick();\n    }, 1000);\n    var timer2 = setInterval(function () {\n      return check();\n    }, 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  function check() {\n    if (hour == date.getHours() && minute == date.getMinutes() && second == date.getSeconds()) {\n      alert('hello');\n    }\n  }\n\n  var agendarHorario = function agendarHorario() {\n    events.push({\n      name: \"evento \".concat(contador),\n      hora: hour,\n      minuto: minute\n    });\n    setContador(contador + 1);\n    console.log(events);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [date.getHours(), \":\", date.getMinutes(), \":\", date.getSeconds()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your time is: \", hour, \":\", minute]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      onChange: function onChange(event) {\n        return setHour(event.target.value);\n      },\n      id: \"outlined-basic\",\n      label: \"Hora\",\n      variant: \"outlined\",\n      className: styles.timeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: styles.divisor,\n      children: \":\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      onChange: function onChange(event) {\n        return setMinute(event.target.value);\n      },\n      id: \"outlined-basic2\",\n      label: \"Minutos\",\n      variant: \"outlined\",\n      className: styles.timeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: agendarHorario,\n      children: \"aaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: events.map(function (x) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: x.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 6\n  }, this);\n}\n\n_s(home, \"2xxfHKB/+tt7cwqrl0zZ6vEp+FU=\");","map":{"version":3,"sources":["/home/julio/relogiodigital/pages/index.js"],"names":["React","useState","useEffect","styles","TextField","Fab","home","props","Date","date","setDate","hour","setHour","minute","setMinute","second","events","setEvents","contador","setContador","timerID","setInterval","tick","timer2","check","cleanup","clearInterval","getHours","getMinutes","getSeconds","alert","agendarHorario","push","name","hora","minuto","console","log","form","event","target","value","timeInput","divisor","map","x"],"mappings":"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","sourcesContent":["//import { render } from 'node-sass';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/index.module.scss'\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\n//import AddIcon from '@material-ui/icons/Add';\n//import NavigationIcon from '@material-ui/icons/Navigation';\n\n\nexport default function home(props) {\n  const [date, setDate] = useState(new Date());\n  const [hour, setHour] = useState('')\n  const [minute, setMinute] = useState('')\n  const second = 1;\n  var [events, setEvents] = useState([])\n  var [contador, setContador] = useState(0)\n //Replaces componentDidMount and componentWillUnmount\n  useEffect(() => {\n    var timerID = setInterval( () => tick(), 1000 );\n    var timer2 = setInterval( () => check(), 1000 ); \n\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n      };\n });\n\n  function tick() {\n    setDate(new Date());\n   }\n\n\n  function check(){\n    if (hour == date.getHours() && minute == date.getMinutes()\n       && second == date.getSeconds()){\n        alert('hello');\n       \n      }\n   }\n\n  const agendarHorario = () => {\n\n    events.push({\n      name: `evento ${contador}`,\n      hora: hour,\n      minuto: minute\n    })\n    setContador(contador+1)\n    console.log(events)\n    \n    }\n\n\n  return (\n    \n    \n     <div className={styles.form}>\n        \n        <h1>{date.getHours()}:{date.getMinutes()}:{date.getSeconds()}</h1>\n        <h2>Your time is: {hour}:{minute}</h2>\n        <TextField onChange={event => setHour(event.target.value)}\n        id=\"outlined-basic\" label=\"Hora\" variant=\"outlined\" \n        className={styles.timeInput} />\n        <a className = {styles.divisor}>:</a>\n\n        <TextField onChange={event => setMinute(event.target.value)} \n        id=\"outlined-basic2\" label=\"Minutos\" variant=\"outlined\" \n        className={styles.timeInput}/>\n        <br /><br /> <br />\n\n        <button onClick={agendarHorario}>aaaaaa</button>\n        \n        \n        <div>\n          {events.map(x => (\n            <li>{x.name}</li>\n          ))}\n        </div>\n      </div>\n      \n      \n    );\n}"]},"metadata":{},"sourceType":"module"}