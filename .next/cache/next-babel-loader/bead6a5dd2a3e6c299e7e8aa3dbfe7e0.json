{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/julio/relogiodigital/pages/index.js\",\n    _s = $RefreshSig$();\n\n//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react'; //import styles from '../styles/index.module.scss'\n\nexport default function home(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(new Date()),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(''),\n      hour = _useState2[0],\n      setHour = _useState2[1];\n\n  var _useState3 = useState(''),\n      minute = _useState3[0],\n      setMinute = _useState3[1];\n\n  var second = 1;\n\n  var _useState4 = useState([]),\n      events = _useState4[0],\n      setEvents = _useState4[1];\n\n  var _useState5 = useState(0),\n      contador = _useState5[0],\n      setContador = _useState5[1]; //Replaces componentDidMount and componentWillUnmount\n\n\n  useEffect(function () {\n    var timerID = setInterval(function () {\n      return tick();\n    }, 1000);\n    var timer2 = setInterval(function () {\n      return check();\n    }, 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n  });\n\n  function tick() {\n    setDate(new Date());\n  }\n\n  function check() {\n    if (hour == date.getHours() && minute == date.getMinutes() && second == date.getSeconds()) {\n      alert('hello');\n    }\n  }\n\n  var agendarHorario = function agendarHorario(hours, minutes) {\n    console.log(events);\n  };\n\n  var myArrCreatedFromMap = events.map(function (item, i) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: item.name\n    }, item + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 58\n    }, _this);\n  });\n\n  var myList = function myList() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myArrCreatedFromMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }, _this); // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n  };\n\n  function list() {\n    var _this2 = this;\n\n    e = events;\n    return /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: e.map(function (x) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: x.name\n        }, x.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, _this2);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It is \", date.toLocaleTimeString(), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your time is: \", hour, \":\", minute]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"list\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: function onChange(event) {\n        return setHour(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: function onChange(event) {\n        return setMinute(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return alert('hello');\n      },\n      children: \"aaaaaa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n\n_s(home, \"2xxfHKB/+tt7cwqrl0zZ6vEp+FU=\");","map":{"version":3,"sources":["/home/julio/relogiodigital/pages/index.js"],"names":["useState","useEffect","home","props","Date","date","setDate","hour","setHour","minute","setMinute","second","events","setEvents","contador","setContador","timerID","setInterval","tick","timer2","check","cleanup","clearInterval","getHours","getMinutes","getSeconds","alert","agendarHorario","hours","minutes","console","log","myArrCreatedFromMap","map","item","i","name","myList","list","e","x","toLocaleTimeString","event","target","value"],"mappings":"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","sourcesContent":["//import { render } from 'node-sass';\nimport { useState, useEffect } from 'react';\n//import styles from '../styles/index.module.scss'\n\nexport default function home(props) {\n  const [date, setDate] = useState(new Date());\n  const [hour, setHour] = useState('')\n  const [minute, setMinute] = useState('')\n  const second = 1;\n  var [events, setEvents] = useState([])\n  var [contador, setContador] = useState(0)\n //Replaces componentDidMount and componentWillUnmount\n useEffect(() => {\n  var timerID = setInterval( () => tick(), 1000 );\n  var timer2 = setInterval( () => check(), 1000 ); \n\n  return function cleanup() {\n      clearInterval(timerID);\n      clearInterval(timer2);\n    };\n });\n\n   function tick() {\n    setDate(new Date());\n   }\n\n\n   function check(){\n     if (hour == date.getHours() && minute == date.getMinutes()\n     && second == date.getSeconds()){\n       alert('hello');\n       \n     }\n   }\n\n  const agendarHorario = (hours, minutes) => {\n\n    console.log(events)\n    \n    }\n    const myArrCreatedFromMap = events.map((item, i) => (<li key={item + i}>{item.name}</li>));\n    const myList =() => {\n      return(<ul>{myArrCreatedFromMap}</ul>) // `myArrCreatedFromMap` will evaluate to a list of `<li>` elements\n    }\n\n\n    function list(){\n      e = events\n      return(\n        <ol>\n          {e.map(x => (\n            <li key={x.name}>{x.name}</li>\n          ))}\n        </ol>\n      )\n    }\n\n   return (\n      <div>\n        <h1>Hello, world!</h1>\n        <h2>It is {date.toLocaleTimeString()}.</h2>\n        <h1>Your time is: {hour}:{minute}</h1>\n\n        <list />\n        \n        <input onChange={event => setHour(event.target.value)} />\n        <input onChange={event => setMinute(event.target.value)} />\n        <button onClick={() => alert('hello')}>aaaaaa</button>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}